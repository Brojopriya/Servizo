{"ast":null,"code":"app.get('/technician-dashboard', authenticateJWTWithRole(['technician']), (req, res) => {\n  const technicianId = req.user.user_id;\n\n  // Query to fetch technician details\n  const technicianQuery = `\n    SELECT user_name, phone_number, email, experienced_years, \n           (SELECT AVG(rating) FROM Booking WHERE technician_id = ?) AS rating\n    FROM User\n    JOIN Technician ON User.user_id = Technician.user_id\n    WHERE User.user_id = ?\n  `;\n\n  // Query to fetch pending bookings\n  const pendingBookingsQuery = `\n    SELECT Booking.booking_id, Booking.booking_date, Booking.status, \n           User.user_name AS customer_name\n    FROM Booking\n    JOIN User ON Booking.customer_id = User.user_id\n    WHERE Booking.technician_id = ? AND Booking.status = 'Pending'\n  `;\n\n  // Query to fetch booking history\n  const bookingHistoryQuery = `\n    SELECT Booking.booking_id, Booking.booking_date, Booking.status, Booking.rating, \n           Booking.review, User.user_name AS customer_name\n    FROM Booking\n    JOIN User ON Booking.customer_id = User.user_id\n    WHERE Booking.technician_id = ? AND Booking.status = 'Completed'\n  `;\n  db.query(technicianQuery, [technicianId, technicianId], (err, technicianResults) => {\n    if (err) return res.status(500).json({\n      success: false,\n      message: 'Error fetching technician details.'\n    });\n    db.query(pendingBookingsQuery, [technicianId], (err, pendingResults) => {\n      if (err) return res.status(500).json({\n        success: false,\n        message: 'Error fetching pending bookings.'\n      });\n      db.query(bookingHistoryQuery, [technicianId], (err, historyResults) => {\n        if (err) return res.status(500).json({\n          success: false,\n          message: 'Error fetching booking history.'\n        });\n        res.json({\n          success: true,\n          message: `Welcome to the Technician Dashboard, Technician ID: ${technicianId}`,\n          technicianDetails: technicianResults[0],\n          pendingBookings: pendingResults,\n          bookingHistory: historyResults\n        });\n      });\n    });\n  });\n});","map":{"version":3,"names":["app","get","authenticateJWTWithRole","req","res","technicianId","user","user_id","technicianQuery","pendingBookingsQuery","bookingHistoryQuery","db","query","err","technicianResults","status","json","success","message","pendingResults","historyResults","technicianDetails","pendingBookings","bookingHistory"],"sources":["/Users/arafatsheikh/D_Drive/programming/web_dev/service-technician-finder/frontend/src/components/TechnicianDashboard.js"],"sourcesContent":["app.get('/technician-dashboard', authenticateJWTWithRole(['technician']), (req, res) => {\n  const technicianId = req.user.user_id;\n\n  // Query to fetch technician details\n  const technicianQuery = `\n    SELECT user_name, phone_number, email, experienced_years, \n           (SELECT AVG(rating) FROM Booking WHERE technician_id = ?) AS rating\n    FROM User\n    JOIN Technician ON User.user_id = Technician.user_id\n    WHERE User.user_id = ?\n  `;\n\n  // Query to fetch pending bookings\n  const pendingBookingsQuery = `\n    SELECT Booking.booking_id, Booking.booking_date, Booking.status, \n           User.user_name AS customer_name\n    FROM Booking\n    JOIN User ON Booking.customer_id = User.user_id\n    WHERE Booking.technician_id = ? AND Booking.status = 'Pending'\n  `;\n\n  // Query to fetch booking history\n  const bookingHistoryQuery = `\n    SELECT Booking.booking_id, Booking.booking_date, Booking.status, Booking.rating, \n           Booking.review, User.user_name AS customer_name\n    FROM Booking\n    JOIN User ON Booking.customer_id = User.user_id\n    WHERE Booking.technician_id = ? AND Booking.status = 'Completed'\n  `;\n\n  db.query(technicianQuery, [technicianId, technicianId], (err, technicianResults) => {\n    if (err) return res.status(500).json({ success: false, message: 'Error fetching technician details.' });\n\n    db.query(pendingBookingsQuery, [technicianId], (err, pendingResults) => {\n      if (err) return res.status(500).json({ success: false, message: 'Error fetching pending bookings.' });\n\n      db.query(bookingHistoryQuery, [technicianId], (err, historyResults) => {\n        if (err) return res.status(500).json({ success: false, message: 'Error fetching booking history.' });\n\n        res.json({\n          success: true,\n          message: `Welcome to the Technician Dashboard, Technician ID: ${technicianId}`,\n          technicianDetails: technicianResults[0],\n          pendingBookings: pendingResults,\n          bookingHistory: historyResults,\n        });\n      });\n    });\n  });\n});\n"],"mappings":"AAAAA,GAAG,CAACC,GAAG,CAAC,uBAAuB,EAAEC,uBAAuB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACtF,MAAMC,YAAY,GAAGF,GAAG,CAACG,IAAI,CAACC,OAAO;;EAErC;EACA,MAAMC,eAAe,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;;EAED;EACA,MAAMC,oBAAoB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;;EAED;EACA,MAAMC,mBAAmB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;EAEDC,EAAE,CAACC,KAAK,CAACJ,eAAe,EAAE,CAACH,YAAY,EAAEA,YAAY,CAAC,EAAE,CAACQ,GAAG,EAAEC,iBAAiB,KAAK;IAClF,IAAID,GAAG,EAAE,OAAOT,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqC,CAAC,CAAC;IAEvGP,EAAE,CAACC,KAAK,CAACH,oBAAoB,EAAE,CAACJ,YAAY,CAAC,EAAE,CAACQ,GAAG,EAAEM,cAAc,KAAK;MACtE,IAAIN,GAAG,EAAE,OAAOT,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAmC,CAAC,CAAC;MAErGP,EAAE,CAACC,KAAK,CAACF,mBAAmB,EAAE,CAACL,YAAY,CAAC,EAAE,CAACQ,GAAG,EAAEO,cAAc,KAAK;QACrE,IAAIP,GAAG,EAAE,OAAOT,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAE;QAAkC,CAAC,CAAC;QAEpGd,GAAG,CAACY,IAAI,CAAC;UACPC,OAAO,EAAE,IAAI;UACbC,OAAO,EAAE,uDAAuDb,YAAY,EAAE;UAC9EgB,iBAAiB,EAAEP,iBAAiB,CAAC,CAAC,CAAC;UACvCQ,eAAe,EAAEH,cAAc;UAC/BI,cAAc,EAAEH;QAClB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}